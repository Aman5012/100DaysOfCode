518. Coin Change II

//QUESTION LNK: https://leetcode.com/problems/coin-change-ii/description/

TOPIC: DP


CODE:
class Solution {
public:
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n + 1, vector<int>(amount + 1, 0));

        // Base case: 1 way to make 0 amount
        for (int i = 0; i <= n; i++) {
            dp[i][0] = 1;
        }

        // DP transition
        for (int i = 1; i <= n; i++) {
            for (int amt = 0; amt <= amount; amt++) {
                if (coins[i - 1] <= amt) {
                    dp[i][amt] = dp[i - 1][amt] + dp[i][amt - coins[i - 1]];
                } else {
                    dp[i][amt] = dp[i - 1][amt];
                }
            }
        }

        return dp[n][amount];
    }
};
