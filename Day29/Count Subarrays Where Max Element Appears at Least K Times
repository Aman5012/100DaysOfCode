2962. Count Subarrays Where Max Element Appears at Least K Times
//QUESTION LNK: https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times/?envType=daily-question&envId=2025-04-29

TOPIC: array, sliding window


CODE:

Time Complexity: O(n)
Space Complexity: O(1)

class Solution {
public:
    long long countSubarrays(vector<int>& nums, int k) {

        int n = nums.size();
        int maxVal = *max_element(nums.begin(), nums.end());

        int left = 0, right = 0, freq = 0;
        long long result = 0;

        while (right < n) {
            if (nums[right] == maxVal) freq++;

            while (freq >= k) {
                // When freq of max is >= k, all subarrays starting from left to n-1 are valid
                result += (n - right);

                // Shrink window from the left
                if (nums[left] == maxVal) freq--;
                left++;
            }

            right++;
        }

        return result;

    }
};
