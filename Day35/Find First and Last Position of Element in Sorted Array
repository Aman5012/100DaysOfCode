Find First and Last Position of Element in Sorted Array


//QUESTION LNK: https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

TOPIC: Array
Binary Search


CODE:

Time Complexity: O(log n)
Space Complexity: O(1)

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = -1, last = -1;
        int n = nums.size();

        // Find first occurrence
        int low = 0, high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] < target)
                low = mid + 1;
            else {
                if (nums[mid] == target) first = mid;
                high = mid - 1;
            }
        }

        // Find last occurrence
        low = 0, high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] > target)
                high = mid - 1;
            else {
                if (nums[mid] == target) last = mid;
                low = mid + 1;
            }
        }

        return {first, last};
    }
};
