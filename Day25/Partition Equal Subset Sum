416. Partition Equal Subset Sum
//QUESTION LNK: https://leetcode.com/problems/partition-equal-subset-sum/description/?envType=daily-question&envId=2025-04-07

TOPIC: Dp

CODE:

Time Complexity: O(n.sum);
Space Complexity: O(n.sum)
class Solution {
public:
    bool canPartition(vector<int>& nums) {
        // int totalSum = accumulate(nums.begin(), nums.end(), 0);
        int n = nums.size();
        int totalSum=0;
        for(int i=0; i<n; i++){
            totalSum += nums[i];
        }
        
        if (totalSum % 2 != 0) return false;
        
        int target = totalSum / 2;
        
        vector<vector<bool>> dp(n+1, vector<bool>(target+1, false));
        
        for (int i = 0; i <= n; i++) {
            dp[i][0] = true;  // sum 0 is always possible
        }
        
        for (int i = 1; i <= n; i++) {
            for (int sum = 1; sum <= target; sum++) {
                if (nums[i-1] <= sum) {
                    dp[i][sum] = dp[i-1][sum] || dp[i-1][sum - nums[i-1]];
                } else {
                    dp[i][sum] = dp[i-1][sum];
                }
            }
        }
        
        return dp[n][target];
    }
};
