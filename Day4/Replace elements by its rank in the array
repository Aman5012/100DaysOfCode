//QUESTION LNK: https://www.geeksforgeeks.org/problems/replace-elements-by-its-rank-in-the-array/1

TOPIC: Heap

Code:  


class Solution{
public:

    vector<int> replaceWithRank(vector<int> &arr, int N){

//////////////////////////////////       using Map ///////////////////////

        // vector<int> sortedArr = arr;
        // sort(sortedArr.begin(), sortedArr.end());
        
        // // map each elt to its rank
        // map<int, int>rankMap;
        // int rank =1;
        
        // for(int num: sortedArr ){
        //     if (rankMap.find(num) == rankMap.end()) {  // Only assign rank to the first occurrence
        //     rankMap[num] = rank;
        //     rank++;
        //     }
        // }
        
        // vector<int> result;
        // for(int num: arr){
        //     result.push_back(rankMap[num]);
            
        // }
        // return result;

/////////////////////////////     heap method ///////////////////////////////////////

    // Time Complexity: 𝑂(𝑁log⁡𝑁)O(NlogN)
    // Space Complexity:𝑂(𝑁)O(N)

        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> minHeap;
        // push all elt into heap
        for(int i=0; i<N; i++){
            minHeap.push({arr[i],i});
        }
        
        vector<int> ranks(N);
        int rank=1;
        
        while(!minHeap.empty()){
            auto top = minHeap.top();// Get the smallest element
            minHeap.pop();
            
            ranks[top.second]= rank; // Assign rank to the original index
            rank++;
            
        }
        return ranks;
    }

};
