523. Continuous Subarray Sum

//QUESTION LNK: https://leetcode.com/problems/continuous-subarray-sum/

TOPIC: Array
Hash Table
Math
Prefix Sum


CODE:

Time Complexity: O(n)
Space Complexity: O(n)

class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        if (n < 2) return false;
        unordered_map<int , int> mp;

        mp[0]=-1;
        int sum =0;
        for(int i=0; i<n; i++){
            sum +=nums[i];
            int remainder = sum % k;

            if(mp.find(remainder) != mp.end()){
                if(i - mp[remainder] >=2) return true;
            }else{
                mp[remainder]  = i;
            }
        }
        return false;
    }
};
