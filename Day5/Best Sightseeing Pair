1014. Best Sightseeing Pair

//QUESTION LNK: https://leetcode.com/problems/best-sightseeing-pair/description/?envType=daily-question&envId=2024-12-27


class Solution {
public:
    int maxScoreSightseeingPair(vector<int>& values) {

/////////////  brute force approach /////////////

        // Time Complexity: 𝑂(𝑛^2)
         // Space Complexity: 𝑂(1)

        // int n= values.size();
        // int max=0;
        // for(int i=0; i<n; i++){
        //     for(int j=i+1; j<n; j++){
        //         int score= values[i]+ values[j]+i-j;
        //         if(max<score) max= score;
        //     }
        // }
        // return max;

/////////////////////////////////////   single pass///////////////////

        // Time Complexity: 𝑂(𝑛) (single traversal).
        // Space Complexity: 𝑂(1) 

        int n= values.size();
        int maxScore=0;
        int leftMax=values[0];

        for(int j=1; j<n; j++){
            maxScore= max(maxScore, leftMax + values[j] -j);

            leftMax= max(leftMax, values[j]+ j);
        }
        return maxScore;
    }
};
